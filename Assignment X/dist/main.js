(()=>{var e={910:(e,t,r)=>{const{distanceOps:o,KilometerConverter:s,MilesConverter:n}=r(398),{temperatureOps:c,CelsiusConverter:i,KelvinConverter:a,FahrenheitConverter:u}=r(772);class l{constructor(e,t,r){this.fromOp=e,this.toOp=t,this.fromValue=r}convert(){throw new Error("Abstract method")}}e.exports={DistanceConverter:class extends l{constructor(e,t,r){super(e,t,r)}convert(){switch(this.fromOp){case o.Km:return new s(this.fromValue).convert(this.toOp);case o.Mi:return new n(this.fromValue).convert(this.toOp)}}},TemperatureConverter:class extends l{constructor(e,t,r){super(e,t,r)}convert(){switch(this.fromOp){case c.C:return new i(this.fromValue).convert(this.toOp);case c.K:return new a(this.fromValue).convert(this.toOp);case c.F:return new u(this.fromValue).convert(this.toOp)}}}}},398:e=>{const t={Km:"Kilometers",Mi:"Miles"};class r{constructor(e){this.fromValue=e}convert(e){switch(e){case t.Km:return this.toKilometers();case t.Mi:return this.toMiles()}}toKilometers(){throw new Error("Abstract method")}toMiles(){throw new Error("Abstract method")}}e.exports={distanceOps:t,KilometerConverter:class extends r{constructor(e){super(e)}toKilometers(){return this.fromValue}toMiles(){return(this.fromValue/1.609344).toFixed(3)}},MilesConverter:class extends r{constructor(e){super(e)}toKilometers(){return(1.609344*this.fromValue).toFixed(3)}toMiles(){return this.fromValue}}}},772:e=>{const t={C:"Celsius",K:"Kelvin",F:"Fahrenheit"};class r{constructor(e){this.fromValue=e}convert(e){switch(e){case t.C:return this.toCelsius();case t.K:return this.toKelvin();case t.F:return this.toFahrenheit()}}toCelsius(){throw new Error("Abstract method")}toKelvin(){throw new Error("Abstract method")}toFahrenheit(){throw new Error("Abstract method")}}e.exports={temperatureOps:t,CelsiusConverter:class extends r{constructor(e){super(e)}toCelsius(){return this.fromValue}toKelvin(){throw new Error("Abstract method")}toFahrenheit(){throw new Error("Abstract method")}},KelvinConverter:class extends r{constructor(e){super(e)}toCelsius(){throw new Error("Abstract method")}toKelvin(){return this.fromValue}toFahrenheit(){throw new Error("Abstract method")}},FahrenheitConverter:class extends r{constructor(e){super(e)}toCelsius(){throw new Error("Abstract method")}toKelvin(){throw new Error("Abstract method")}toFahrenheit(){return this.fromValue}}}}},t={};function r(o){if(t[o])return t[o].exports;var s=t[o]={exports:{}};return e[o](s,s.exports,r),s.exports}(()=>{const e=document.getElementById("convertBtn"),t=document.getElementById("from"),o=document.getElementById("fromOp"),s=document.getElementById("to"),n=document.getElementById("toOp"),{DistanceConverter:c,TemperatureConverter:i}=r(910);e.onclick=()=>{const e=o[o.selectedIndex].parentNode.label;if(e===n[n.selectedIndex].parentNode.label)switch(e){case"Temperature":s.value=new i(o.value,n.value,t.value).convert();break;case"Distance":s.value=new c(o.value,n.value,t.value).convert()}}})()})();